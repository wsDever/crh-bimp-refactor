"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var nb_component_core_js_1 = require("../nb-component.core.js");
var Switch = function () { function e() { var e = this; this.checked = !1, this.disabled = !1, this.color = "#4C98FC", this.w = 80, this.h = 48, this.onChange = function () { e.disabled || (e.checked = !e.checked, e.change.emit({ checked: e.checked })); }; } return Object.defineProperty(e.prototype, "remStyles", { get: function () { return { container: { width: this.w / 75 + "rem", height: this.h / 75 + "rem", borderRadius: this.h / 2 / 75 + "rem" }, ball: { width: (this.h - 8) / 75 + "rem", height: (this.h - 8) / 75 + "rem" } }; }, enumerable: !0, configurable: !0 }), e.prototype.render = function () { return nb_component_core_js_1.h("div", { onClick: this.onChange, class: "switch " + (this.checked ? "checked" : "") + " " + (this.disabled ? "disabled" : ""), style: Object.assign({}, this.remStyles.container, { backgroundColor: this.checked ? this.color : "#C7C7C7" }) }, nb_component_core_js_1.h("div", { style: Object.assign({}, this.remStyles.ball, { transform: this.checked ? "translateX(" + (this.w - this.h) / 75 + "rem)" : "none" }), class: "roundball" })); }, Object.defineProperty(e, "is", { get: function () { return "nb-switch"; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "encapsulation", { get: function () { return "shadow"; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "properties", { get: function () { return { checked: { type: Boolean, attr: "checked", mutable: !0 }, color: { type: String, attr: "color" }, disabled: { type: Boolean, attr: "disabled" }, h: { type: Number, attr: "h" }, w: { type: Number, attr: "w" } }; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "events", { get: function () { return [{ name: "change", method: "change", bubbles: !0, cancelable: !0, composed: !0 }]; }, enumerable: !0, configurable: !0 }), Object.defineProperty(e, "style", { get: function () { return ".switch{position:relative;display:inline-block;vertical-align:middle}.switch.disabled{opacity:.8}.switch .roundball{background:#fff;border:1px solid #f5f5f5;border-radius:50%;position:absolute;left:.02666666666666667rem;top:.02666666666666667rem;-webkit-transition:-webkit-transform .3s;transition:-webkit-transform .3s;transition:transform .3s;transition:transform .3s,-webkit-transform .3s}"; }, enumerable: !0, configurable: !0 }), e; }();
exports.NbSwitch = Switch;
